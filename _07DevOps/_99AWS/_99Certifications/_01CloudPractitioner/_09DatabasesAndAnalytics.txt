Databases Basics
	• Storing data on disk (EFS, EBS, EC2 Instance Store, S3) can have its limits
	• Sometimes, you want to store data in a database…
	• You can structure the data
	• You build indexes to efficiently query / search through the data
	• You define relationships between your datasets
	• Databases are optimized for a purpose and come with different features, shapes and constraints

Relational Databases
	• Looks just like Excel spreadsheets, with links between them!
	• Can use the SQL language to perform queries / lookups

NoSQL Databases
	• NoSQL = non-SQL = non relational databases
	• NoSQL databases are purpose built for specific data models and have flexible schemas for building modern applications.
	• Benefits:
		• Flexibility: easy to evolve data model
		• Scalability: designed to scale-out by using distributed clusters
		• High-performance: optimized for a specific data model
		• Highly functional: types optimized for the data model
	• Examples: Key-value, document, graph, in-memory, search databases

NoSQL data example: JSON
	• JSON = JavaScript Object Notation
	• JSON is a common form of data that fits into a NoSQL model
	• Data can be nested
	• Fields can change over time
	• Support for new types: arrays, etc…

Databases & Shared Responsibility on AWS
	• AWS offers use to manage different databases
	• Benefits include:
		• Quick Provisioning, High Availability, Vertical and Horizontal Scaling
		• Automated Backup & Restore, Operations, Upgrades
		• Operating System Patching is handled by AWS
		• Monitoring, alerting
	• Note: many databases technologies could be run on EC2, 
		but you must handle yourself the resiliency, backup, patching, high availability, fault tolerance, scaling… 



Amazon RDS Overview
	• RDS stands for Relational Database Service
	• It’s a managed DB service for DB use SQL as a query language.
	• It allows you to create databases in the cloud that are managed by AWS
		• Postgres
		• MySQL
		• MariaDB
		• Oracle
		• Microsoft SQL Server
		• IBM DB2
		• Aurora (AWS Proprietary database)
	• Advantage over using RDS versus deploying DB on EC2
		• RDS is a managed service:
			• Automated provisioning, OS patching
			• Continuous backups and restore to specific timestamp (Point in Time Restore)!
			• Monitoring dashboards
			• Read replicas for improved read performance
			• Multi AZ setup for DR (Disaster Recovery)
			• Maintenance windows for upgrades
			• Scaling capability (vertical and horizontal)
			• Storage backed by EBS
		• BUT you can’t SSH into your instances
	• RDS Solution Architecture
		Elastic Load Balancer =>EC2 Instances (Possibly in an ASG) =>SQL (relational) Database
	Amazon Relational Database Service (Amazon RDS) is a SQL managed service that makes it easy to set up, operate, and scale a relational database in the cloud. It is suited for OLTP workloads
	
	
Amazon Aurora
	• Aurora is a proprietary technology from AWS (not open sourced)
	• PostgreSQL and MySQL are both supported as Aurora DB
	• Aurora is “AWS cloud optimized” 
		and claims 5x performance improvement over MySQL on RDS, 
		over 3x the performance of Postgres on RDS
	• Aurora storage automatically grows in increments of 10GB, up to 128 TB
	• Aurora costs more than RDS (20% more) – but is more efficient
	• Not in the free tier
	• Amazon Aurora Serverless
		• Client => Proxy Fleet(managed by Aurora) =>Shared storage Volume
		• Automated database instantiation and auto-scaling based on actual usage
		• PostgreSQL and MySQL are both supported as Aurora Serverless DB
		• No capacity planning needed • Least management overhead • Pay per second, can be more cost - effective
		• Use cases: good for infrequent,intermittent or unpredictable workloads…
	Amazon Aurora is a MySQL and PostgreSQL-compatible relational database built for the cloud, that combines the performance and availability of traditional enterprise databases with the simplicity and cost-effectiveness of open source databases. It is a proprietary technology from AWS.		

RDS Deployments Options: Read Replicas, Multi-AZ & Multi-Region
	• Read Replicas:
		• Scale the read workload of your DB
		• Can create up to 15 Read Replicas
		• Data is only written to the main DB
		• Multi-Region (Read Replicas)
			• Disaster recovery in case of region issue
			• Local performance for global reads
			• Replication cost need to be consider
	• Multi-AZ:
		• Failover in case of AZ outage (high availability)
		• Data is only read/written to the main database
		• Can only have 1 other AZ as failover


Amazon ElastiCache Overview
	• The same way RDS is to get managed Relational Databases…
	• ElastiCache is to get managed Redis or Memcached
	• Caches are in-memory databases with high performance, low latency
	• Helps reduce load off databases for read intensive workloads
	• AWS takes care of OS maintenance / patching, optimizations, setup, 
		configuration, monitoring, failure recovery and backups
	• ElastiCache Solution Architecture - Cache
		Elastic Load Balancer =>EC2 Instances(Possibly in an ASG)=>Read/Write from cache(Fast)=>Elastic Cache(In-memory database)
		Elastic Load Balancer =>EC2 Instances(Possibly in an ASG)=>Read/Write from DB(Slower)=>SQL(Relational database)


DynamoDB
	• DynamoDB is a fully managed NoSQL database that supports both document and key-value store models.
	• Fully Managed Highly available with replication across 3 AZ
	• NoSQL database - not a relational database
	• Scales to massive workloads, distributed “serverless” database
	• Millions of requests per seconds, trillions of row, 100s of TB of storage
	• Fast and consistent in performance
	• Single-digit millisecond latency – low latency retrieval
	• Integrated with IAM for security, authorization and administration
	• Low cost and auto scaling capabilities
	• Standard & Infrequent Access (IA) Table Class
	• DynamoDB – type of data
		• https://aws.amazon.com/nosql/key-value/
		• DynamoDB is a key/value database
		• Primary Key(Partition Key(Product ID)+Sort Key(Product type))+Products()
	• DynamoDB Accelerator - DAX
		• Fully Managed in-memory cache for DynamoDB
		• 10x performance improvement – single- digit millisecond latency to microseconds latency – 
			when accessing your DynamoDB tables
		• Secure, highly scalable & highly available
		• Difference with ElastiCache at the CCP level: 
			DAX is only used for and is integrated with DynamoDB, while ElastiCache can be used for other databases
	• DynamoDB – Global Tables
		• Make a DynamoDB table accessible with low latency in multiple-regions
		• Active-Active replication (read/write to any AWS Region)


Redshift Overview
	• Redshift is based on PostgreSQL, but it’s not used for OLTP(online trasaction processing)
	• It’s OLAP – online analytical processing (analytics and data warehousing)
	• Load data once every hour, not every second
	• 10x better performance than other data warehouses, scale to PBs of data
	• Columnar storage of data (instead of row based)
	• Massively Parallel Query Execution (MPP), highly available
	• Pay as you go based on the instances provisioned
	• Has a SQL interface for performing the queries
	• BI tools such as AWS Quicksight or Tableau integrate with it
	• Redshift Serverless
		• Automatically provisions and scales data warehouse underlying capacity
		• Run analytics workloads without managing data warehouse infrastructure
		• Pay only for what you use (save costs)
		• Use cases: Reporting, dashboarding applications, real-time analytics…
		• Enable Amazon Redshift Serverless for your AWS Account
			Connect using Amazon Redshift Query Editor or any other tool
			Amazon Redshift Serverless 
				run queries by automatically provision and scale capacity based on workloads
			Pay only for compute and storage used during analysis
	Amazon Redshift is a fully managed, petabyte-scale data warehouse service in the cloud.
	

Amazon EMR
	• EMR stands for “Elastic MapReduce”
	• EMR helps creating Hadoop clusters (Big Data) to analyze and process vast amount of data
	• The clusters can be made of hundreds of EC2 instances
	• Also supports Apache Spark, HBase, Presto, Flink…
	• EMR takes care of all the provisioning and configuration
	• Auto-scaling and integrated with Spot instances
	• Use cases: data processing, machine learning, web indexing, big data…
	Amazon EMR is a web service that enables businesses, researchers, data analysts, and developers to easily and cost-effectively process vast amounts of data. EMR helps creating Hadoop clusters (Big Data) to analyze and process vast amount of data
	
			
			
			
			
Amazon Athena
	• Serverless query service to analyze data stored in Amazon S3
	• Uses standard SQL language to query the files
	• Supports CSV, JSON, ORC, Avro, and Parquet (built on Presto)
	• Pricing: $5.00 per TB of data scanned
	• Use compressed or columnar data for cost-savings (less scan)
	• Use cases: Business intelligence / analytics / reporting, analyze & query VPC Flow Logs, 
		ELB Logs, CloudTrail trails, etc...
	• Exam Tip: analyze data in S3 using serverless SQL, use Athena			
	• load data in Amazon S3
		Query & Analyze using Amazon Athena
		Reporting & Dashboards using Amazon QuickSight


• Amazon QuickSight
	• Serverless machine learning-powered business intelligence service to create interactive dashboards
	• Fast, automatically scalable, embeddable, with per-session pricing
	• Use cases:
		• Business analytics
		• Building visualizations
		• Perform ad-hoc analysis
		• Get business insights using data
	• Integrated with RDS, Aurora, Athena, Redshift, S3…
	• https://aws.amazon.com/quicksight
	Amazon QuickSight is a fast, cloud-powered business intelligence (BI) service that makes it easy for you to deliver insights to everyone in your organization. You can create and publish interactive dashboards.
				

DocumentDB
	• Aurora is an “AWS-implementation” of PostgreSQL / MySQL …
	• DocumentDB is the same for MongoDB (which is a NoSQL database)
	• MongoDB is used to store, query, and index JSON data
	• Similar “deployment concepts” as Aurora
	• Fully Managed, highly available with replication across 3 AZ
	• DocumentDB storage automatically grows in increments of 10GB
	• Automatically scales to workloads with millions of requests per seconds
	
Amazon Neptune 
	• Fully managed graph database 
	• A popular graph dataset would be a social network 
		• Users have friends 
		• Posts have comments 
		• Comments have likes from users 
		• Users share and like posts… 
		• Highly available across 3 AZ, with up to 15 read replicas 
	• Build and run applications working with highly connected datasets – optimized for these complex and hard queries
	• Can store up to billions of relations and query the graph with milliseconds latency
	• Highly available with replications across multiple AZs 
	• Great for knowledge graphs (Wikipedia), fraud detection, recommendation engines, social networking


Amazon Timestream 
	• Fully managed, fast, scalable, serverless time series database
	• Automatically scales up/down to adjust capacity
	• Store and analyze trillions of events per day 
	• 1000s times faster & 1/10th the cost of relational databases
	• Built	-in time series analytics functions (helps you identify patterns in your data in near real -time)


Amazon QLDB
	• QLDB stands for ”Quantum Ledger Database”
	• A ledger is a book recording financial transactions
	• Fully Managed, Serverless, High available, Replication across 3 AZ
	• Used to review history of all the changes made to your application data over time
	• Immutable system: no entry can be removed or modified, cryptographically verifiable
	• 2-3x better performance than common ledger blockchain frameworks, manipulate data using SQL
	• Difference with Amazon Managed Blockchain: no decentralization component, in accordance with financial regulation rules
	• https://docs.aws.amazon.com/qldb/latest/developerguide/ledger-structure.html



Amazon Managed Blockchain
	• Blockchain makes it possible to build applications where multiple parties can execute transactions 
		without the need for a trusted, central authority.
	• Amazon Managed Blockchain is a managed service to:
		• Join public blockchain networks
		• Or create your own scalable private network
	• Compatible with the frameworks Hyperledger Fabric & Ethereum
	Amazon Managed Blockchain is a fully managed service that makes it easy to create and manage scalable blockchain networks using the popular open source frameworks Hyperledger Fabric and Ethereum. It allows multiple parties to execute transactions without the need of a trusted, central authority.
	
AWS Glue 
	• Managed extract, transform, and load (ETL) service 
	• Useful to prepare and transform data for analytics 
	• Fully serverless service 
	• S3 Bucket/RDS =>Glue ETL(Extract,Transform & Load) =>Redshift
	• Glue Data Catalog: catalog of datasets 
		• can be used by Athena, Redshift, EMR 
		• The AWS Glue Data Catalog is a central repository to store structural and operational metadata for all your data assets. For a given data set, you can store its table definition, physical location, add business relevant attributes, as well as track how this data has changed over time.
		


DMS – Database Migration Service
	• Quickly and securely migrate databases to AWS, resilient, self healing
	• The source database remains available during the migration
	• Supports:
		• Homogeneous migrations: ex Oracle to Oracle
		• Heterogeneous migrations: ex Microsoft SQL Server to Aurora
	• Source DB =>EC2 instance Running DMS=> Target DB

			
			
Databases & Analytics Summary in AWS
	• Relational Databases - OLTP: RDS & Aurora (SQL)
	• Differences between Multi-AZ, Read Replicas, Multi-Region
	• In-memory Database: ElastiCache
	• Key/Value Database: DynamoDB (serverless) & DAX (cache for DynamoDB)
	• Warehouse - OLAP: Redshift (SQL)
	• Hadoop Cluster: EMR
	• Athena: query data on Amazon S3 (serverless & SQL)
	• QuickSight: dashboards on your data (serverless)
	• DocumentDB: “Aurora for MongoDB” (JSON – NoSQL database)
	• Amazon QLDB: Financial Transactions Ledger (immutable journal, cryptographically verifiable)
	• Amazon Managed Blockchain: managed Hyperledger Fabric & Ethereum blockchains
	• Glue: Managed ETL (Extract Transform Load) and Data Catalog service
	• Database Migration: DMS
	• Neptune: graph database
	• Timestream: time-series database 




RDS & Aurora
Elastic Cache
	Redis & Memcached
DynamoDB
	NoSQL database
	Serverless database
	Key-value databse
	DAX for cache
Redshift
	Based on PostgreSQL but not used for OLTP(Online Transaction Processing)
	OLAP(Online Analyting processing)		
EMR(Elastic Map Reduce)
	Hadoop cluster(Bigdata)
Athena
	Fully Serverless database with SQL capabilities
	Used to query data in S3
QuickSight
	Serverless machine learning-powered business intelligence service to create interactive dashboards
	Integrated with RDS, Aurora,Athena, Redshift, S3�
	
Aurora
	AWS implementation of MySQL/Postgre
Document DB
	AWS implementation of MongoDB
	
Neptune
	Fully managed graph database
	
Amazon QLDB
� QLDB stands for �Quantum Ledger Database�
� A ledger is a book recording financial transactions
� Fully Managed, Serverless, High available, Replication across 3 AZ

Amazon Managed Blockchain
� Blockchain makes it possible to build applications where multiple parties can execute transactions without the need for a trusted, central authority.

AWS Glue 
� Managed extract, transform, and load (ETL) service


DMS � Database Migration Service


Databases & Analytics Summary in AWS
� Relational Databases - OLTP: RDS & Aurora (SQL)
� Differences between Multi-AZ, Read Replicas, Multi-Region
� In-memory Database: ElastiCache
� Key/Value Database: DynamoDB (serverless) & DAX (cache for DynamoDB)
� Warehouse - OLAP: Redshift (SQL)
� Hadoop Cluster: EMR
� Athena: query data on Amazon S3 (serverless & SQL)
� QuickSight: dashboards on your data (serverless)
� DocumentDB: �Aurora for MongoDB� (JSON � NoSQL database)
� Amazon QLDB: Financial Transactions Ledger (immutable journal, cryptographically verifiable)
� Amazon Managed Blockchain: managed Hyperledger Fabric & Ethereum blockchains
� Glue: Managed ETL (Extract Transform Load) and Data Catalog service
� Database Migration: DMS
� Neptune: graph database