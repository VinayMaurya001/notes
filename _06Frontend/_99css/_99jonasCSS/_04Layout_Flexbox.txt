Flexbox 
	Flexbox is a set of related CSS properties for building 1-dimensional layouts
	The main idea behind flexbox is that empty space inside a container element can be automatically divided by its child elements
	Flexbox makes it easy to automatically align items to one another inside a parent container, both horizontally and vertically
	Flexbox solves common problems such as vertical centering and creating equal-height columns
	Flexbox is perfect for replacing floats, allowing us to write fewer and cleaner HTML and CSS code

FLEXBOX TERMINOLOGY
	display: flex  //on Flex container
	
	flex container
	flex items
	
	main-axis - (horizontally, by default)
	cross axis- (vertically, by default)
	

FLEX CONTAINER
1)gap: 0 | <length>
	To create space between items, without using margin
2)justify-content: flex-start | flex-end | center |space-between | space-around | space-evenly
	To align items along main axis (horizontally, by default)
3)align-items: stretch | flex-start | flex-end | center | baseline
	To align items along cross axis (vertically, by default)
4)flex-direction: row | row-reverse | column | column-reverse
	To define which is the main axis
5)flex-wrap: nowrap | wrap | wrap-reverse
	To allow items to wrap into a new line if they are too large
6)align-content: stretch | flex-start | flex-end | center | space-between | space-around
	Only applies when there are multiple lines (flex-wrap: wrap)




FLEX ITEMS
1) align-self: auto | stretch | flex-start | flexend | center | baseline
	To overwrite align-items for individual flex items
2) order: 0 | <integer>
	Controls order of items. -1 makes item first, 1 or more makes it last
3) flex: 0 1 auto | <int> <int> <len>
	Recommended shorthand for flex-grow, -shrink, -basis.
	a) flex-grow: 0 | <integer>
		To allow an element to grow (0 means no, 1+ means yes)
	b) flex-shrink: 1 | <integer>
		To allow an element to shrink (0 means no, 1+ means yes)
	c) flex-basis: auto | <length>
		To define an item’s recommended width, instead of the width property


	.container {
        /* FLEXBOX
  		display: flex;
 
	  align-items: center;
	  justify-content: space-between;
	}



